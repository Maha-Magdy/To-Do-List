(()=>{"use strict";var r={426:(r,n,t)=>{t.d(n,{Z:()=>b});var e=t(15),o=t.n(e),i=t(645),a=t.n(i),A=t(667),c=t.n(A),s=new URL(t(83),t.b),l=new URL(t(693),t.b),d=a()(o()),u=c()(s),p=c()(l);d.push([r.id,"body {\r\n  background-color: #fafafa;\r\n  font-family: sans-serif;\r\n  margin: 0;\r\n  color: #6a6969;\r\n  font-weight: 500;\r\n  padding: 50px;\r\n}\r\n\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #b6b6b6;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #6a6969;\r\n}\r\n\r\n.basic-font-weight {\r\n  font-weight: 500;\r\n}\r\n\r\nmain {\r\n  border-radius: 5px;\r\n  margin: 0 auto;\r\n  background-color: white;\r\n  box-shadow: 0 0 15px 0 rgb(154 161 171 / 50%);\r\n  width: 50%;\r\n}\r\n\r\nheader,\r\n.add-item-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.basic-button {\r\n  border: unset;\r\n  background: unset;\r\n  padding: unset;\r\n  cursor: pointer;\r\n}\r\n\r\n.basic-button:hover svg path {\r\n  fill: #6a6969 !important;\r\n}\r\n\r\n.basic-p {\r\n  padding: 20px 25px;\r\n}\r\n\r\n.m-0 {\r\n  margin: 0;\r\n}\r\n\r\n.basic-border {\r\n  border-bottom: 1px solid #d3d3d3;\r\n}\r\n\r\n.add-item-container input {\r\n  border: unset;\r\n  font-size: larger;\r\n  font-style: italic;\r\n  color: #6a6969;\r\n  width: 75%;\r\n}\r\n\r\n.to-do-list li input {\r\n  margin: 0 10px 0 0;\r\n  vertical-align: middle;\r\n  width: 15px;\r\n  height: 15px;\r\n}\r\n\r\n.add-item-container input:focus-visible {\r\n  outline: unset;\r\n}\r\n\r\n::placeholder {\r\n  font-style: italic;\r\n  color: #b6b6b6;\r\n}\r\n\r\n:-ms-input-placeholder {\r\n  /* Internet Explorer 10-11 */\r\n  font-style: italic;\r\n  color: #b6b6b6;\r\n}\r\n\r\n.to-do-list {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.to-do-list li {\r\n  padding: 20px 25px;\r\n  border-bottom: 1px solid #d3d3d3;\r\n  position: relative;\r\n}\r\n\r\n.to-do-list li button {\r\n  position: absolute;\r\n  right: 25px;\r\n  width: 25px;\r\n  height: 25px;\r\n  border: 0;\r\n  background: url("+u+") no-repeat;\r\n  background-size: contain;\r\n  cursor: pointer;\r\n}\r\n\r\n.to-do-list li button:hover {\r\n  background: url("+p+") no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.to-do-list li p {\r\n  margin: 0;\r\n  display: inline-block;\r\n}\r\n\r\n.clear-btn {\r\n  width: 100%;\r\n  background-color: #fafafa;\r\n  color: #b6b6b6;\r\n  font-size: larger;\r\n}\r\n\r\n.clear-btn:hover {\r\n  background-color: #eee;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,uBAAuB;EACvB,SAAS;EACT,cAAc;EACd,gBAAgB;EAChB,aAAa;AACf;;AAEA,UAAU;AACV;EACE,WAAW;AACb;;AAEA,UAAU;AACV;EACE,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA,WAAW;AACX;EACE,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA,oBAAoB;AACpB;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,uBAAuB;EACvB,6CAA6C;EAC7C,UAAU;AACZ;;AAEA;;EAEE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,cAAc;EACd,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;EACtB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,4BAA4B;EAC5B,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,gCAAgC;EAChC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,YAAY;EACZ,SAAS;EACT,6DAAsC;EACtC,wBAAwB;EACxB,eAAe;AACjB;;AAEA;EACE,6DAA2C;EAC3C,wBAAwB;AAC1B;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;EACE,WAAW;EACX,yBAAyB;EACzB,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;AACxB",sourcesContent:['body {\r\n  background-color: #fafafa;\r\n  font-family: sans-serif;\r\n  margin: 0;\r\n  color: #6a6969;\r\n  font-weight: 500;\r\n  padding: 50px;\r\n}\r\n\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #b6b6b6;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #6a6969;\r\n}\r\n\r\n.basic-font-weight {\r\n  font-weight: 500;\r\n}\r\n\r\nmain {\r\n  border-radius: 5px;\r\n  margin: 0 auto;\r\n  background-color: white;\r\n  box-shadow: 0 0 15px 0 rgb(154 161 171 / 50%);\r\n  width: 50%;\r\n}\r\n\r\nheader,\r\n.add-item-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.basic-button {\r\n  border: unset;\r\n  background: unset;\r\n  padding: unset;\r\n  cursor: pointer;\r\n}\r\n\r\n.basic-button:hover svg path {\r\n  fill: #6a6969 !important;\r\n}\r\n\r\n.basic-p {\r\n  padding: 20px 25px;\r\n}\r\n\r\n.m-0 {\r\n  margin: 0;\r\n}\r\n\r\n.basic-border {\r\n  border-bottom: 1px solid #d3d3d3;\r\n}\r\n\r\n.add-item-container input {\r\n  border: unset;\r\n  font-size: larger;\r\n  font-style: italic;\r\n  color: #6a6969;\r\n  width: 75%;\r\n}\r\n\r\n.to-do-list li input {\r\n  margin: 0 10px 0 0;\r\n  vertical-align: middle;\r\n  width: 15px;\r\n  height: 15px;\r\n}\r\n\r\n.add-item-container input:focus-visible {\r\n  outline: unset;\r\n}\r\n\r\n::placeholder {\r\n  font-style: italic;\r\n  color: #b6b6b6;\r\n}\r\n\r\n:-ms-input-placeholder {\r\n  /* Internet Explorer 10-11 */\r\n  font-style: italic;\r\n  color: #b6b6b6;\r\n}\r\n\r\n.to-do-list {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.to-do-list li {\r\n  padding: 20px 25px;\r\n  border-bottom: 1px solid #d3d3d3;\r\n  position: relative;\r\n}\r\n\r\n.to-do-list li button {\r\n  position: absolute;\r\n  right: 25px;\r\n  width: 25px;\r\n  height: 25px;\r\n  border: 0;\r\n  background: url("./dot.svg") no-repeat;\r\n  background-size: contain;\r\n  cursor: pointer;\r\n}\r\n\r\n.to-do-list li button:hover {\r\n  background: url("./dark-dot.svg") no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.to-do-list li p {\r\n  margin: 0;\r\n  display: inline-block;\r\n}\r\n\r\n.clear-btn {\r\n  width: 100%;\r\n  background-color: #fafafa;\r\n  color: #b6b6b6;\r\n  font-size: larger;\r\n}\r\n\r\n.clear-btn:hover {\r\n  background-color: #eee;\r\n}\r\n'],sourceRoot:""}]);const b=d},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var t=r(n);return n[2]?"@media ".concat(n[2]," {").concat(t,"}"):t})).join("")},n.i=function(r,t,e){"string"==typeof r&&(r=[[null,r,""]]);var o={};if(e)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var A=0;A<r.length;A++){var c=[].concat(r[A]);e&&o[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),n.push(c))}},n}},15:r=>{function n(r,n){(null==n||n>r.length)&&(n=r.length);for(var t=0,e=new Array(n);t<n;t++)e[t]=r[t];return e}r.exports=function(r){var t,e,o=(e=4,function(r){if(Array.isArray(r))return r}(t=r)||function(r,n){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,o,i=[],a=!0,A=!1;try{for(t=t.call(r);!(a=(e=t.next()).done)&&(i.push(e.value),!n||i.length!==n);a=!0);}catch(r){A=!0,o=r}finally{try{a||null==t.return||t.return()}finally{if(A)throw o}}return i}}(t,e)||function(r,t){if(r){if("string"==typeof r)return n(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return"Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?n(r,t):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if(!a)return i;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),s="/*# ".concat(c," */"),l=a.sources.map((function(r){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(r," */")}));return[i].concat(l).concat([s]).join("\n")}return[i].join("\n")}},667:r=>{r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},379:r=>{var n=[];function t(r){for(var t=-1,e=0;e<n.length;e++)if(n[e].identifier===r){t=e;break}return t}function e(r,e){for(var i={},a=[],A=0;A<r.length;A++){var c=r[A],s=e.base?c[0]+e.base:c[0],l=i[s]||0,d="".concat(s," ").concat(l);i[s]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3]};-1!==u?(n[u].references++,n[u].updater(p)):n.push({identifier:d,updater:o(p,e),references:1}),a.push(d)}return a}function o(r,n){var t=n.domAPI(n);return t.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap)return;t.update(r=n)}else t.remove()}}r.exports=function(r,o){var i=e(r=r||[],o=o||{});return function(r){r=r||[];for(var a=0;a<i.length;a++){var A=t(i[a]);n[A].references--}for(var c=e(r,o),s=0;s<i.length;s++){var l=t(i[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=c}}},569:r=>{var n={};r.exports=function(r,t){var e=function(r){if(void 0===n[r]){var t=document.querySelector(r);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(r){t=null}n[r]=t}return n[r]}(r);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n),n}},565:(r,n,t)=>{r.exports=function(r){var n=t.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(t){!function(r,n,t){var e=t.css,o=t.media,i=t.sourceMap;o?r.setAttribute("media",o):r.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(e,r)}(n,r,t)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},693:(r,n,t)=>{r.exports=t.p+"b608153f8e332726f2f4.svg"},83:(r,n,t)=>{r.exports=t.p+"b5e72fba9edb41d462c4.svg"}},n={};function t(e){var o=n[e];if(void 0!==o)return o.exports;var i=n[e]={id:e,exports:{}};return r[e](i,i.exports,t),i.exports}t.m=r,t.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return t.d(n,{a:n}),n},t.d=(r,n)=>{for(var e in n)t.o(n,e)&&!t.o(r,e)&&Object.defineProperty(r,e,{enumerable:!0,get:n[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),t.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),(()=>{var r;t.g.importScripts&&(r=t.g.location+"");var n=t.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var e=n.getElementsByTagName("script");e.length&&(r=e[e.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=r})(),t.b=document.baseURI||self.location.href,(()=>{var r=t(379),n=t.n(r),e=t(795),o=t.n(e),i=t(569),a=t.n(i),A=t(565),c=t.n(A),s=t(216),l=t.n(s),d=t(589),u=t.n(d),p=t(426),b={};b.styleTagTransform=u(),b.setAttributes=c(),b.insert=a().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=l(),n()(p.Z,b),p.Z&&p.Z.locals&&p.Z.locals;class f{constructor(r,n,t){this.description=r,this.completed=n,this.index=t}}class g{static setTask(r){let n=g.getToDoList(),t=g.getIndex();r.index=t,n.push(r),localStorage.setItem("to_do_list",JSON.stringify(n))}static getToDoList(){let r;return r=localStorage.getItem("to_do_list")?JSON.parse(localStorage.getItem("to_do_list")):[],r}static getIndex(){let r;return localStorage.getItem("index")?(r=JSON.parse(localStorage.getItem("index"))+1,localStorage.setItem("index",JSON.stringify(r))):(r=0,localStorage.setItem("index",JSON.stringify(r))),r}static resetToDoList(){localStorage.clear()}}let E=g.getToDoList();function m(r){r.sort(((r,n)=>r.index>n.index?1:-1));const n=document.getElementById("to-do-list");n.innerHTML="",r.map((r=>{const t=document.createElement("li"),e=document.createElement("p"),o=document.createTextNode(r.description);e.appendChild(o);const i=document.createElement("input");i.setAttribute("type","checkbox");const a=document.createElement("button");t.appendChild(i),t.appendChild(e),t.appendChild(a),n.appendChild(t)}))}window.addEventListener("load",m(E)),document.getElementById("reset-button").addEventListener("click",(function(){g.resetToDoList()}));const h=document.getElementById("new-task");function C(){if(h.value){const r=h.value;let n=new f(r,!1,0);g.setTask(n),E=g.getToDoList(),h.value="",m(E)}}document.getElementById("add-to-your-list").addEventListener("click",C),h.addEventListener("keydown",(function(r){"Enter"===r.key&&C()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
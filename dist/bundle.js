(()=>{"use strict";var n={426:(n,r,t)=>{t.d(r,{Z:()=>h});var e=t(15),o=t.n(e),i=t(645),a=t.n(i),c=t(667),A=t.n(c),s=new URL(t(83),t.b),l=new URL(t(186),t.b),d=new URL(t(693),t.b),u=new URL(t(467),t.b),p=a()(o()),b=A()(s),g=A()(l),f=A()(d),E=A()(u);p.push([n.id,'body {\r\n  background-color: #fafafa;\r\n  font-family: sans-serif;\r\n  margin: 0;\r\n  color: #6a6969;\r\n  font-weight: 500;\r\n  padding: 50px;\r\n}\r\n\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #b6b6b6;\r\n  border-radius: 10px;\r\n}\r\n\r\n:-ms-input-placeholder {\r\n  /* Internet Explorer 10-11 */\r\n  font-style: italic;\r\n  color: #b6b6b6;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #6a6969;\r\n}\r\n\r\n.basic-font-weight {\r\n  font-weight: 500;\r\n}\r\n\r\nmain {\r\n  border-radius: 5px;\r\n  margin: 0 auto;\r\n  background-color: white;\r\n  box-shadow: 0 0 15px 0 rgb(154 161 171 / 50%);\r\n  width: 50%;\r\n}\r\n\r\nheader,\r\n.add-item-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.basic-button {\r\n  border: unset;\r\n  background: unset;\r\n  padding: unset;\r\n  cursor: pointer;\r\n}\r\n\r\n.basic-button:hover svg path {\r\n  fill: #6a6969 !important;\r\n}\r\n\r\n.basic-p {\r\n  padding: 20px 25px;\r\n}\r\n\r\n.m-0 {\r\n  margin: 0;\r\n}\r\n\r\n.basic-border {\r\n  border-bottom: 1px solid #d3d3d3;\r\n}\r\n\r\n.add-item-container input,\r\n.to-do-list li input[type="text"] {\r\n  border: unset;\r\n  font-size: larger;\r\n  font-style: italic;\r\n  color: #6a6969;\r\n  width: 75% !important;\r\n}\r\n\r\n.to-do-list li input {\r\n  margin: 0 10px 0 0;\r\n  vertical-align: middle;\r\n  width: 15px;\r\n  height: 15px;\r\n}\r\n\r\n.to-do-list li p {\r\n  margin: 0;\r\n  display: inline-block;\r\n}\r\n\r\n.to-do-list li input:checked + p {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.add-item-container input:focus-visible,\r\n.to-do-list li input[type="text"]:focus-visible {\r\n  outline: unset;\r\n}\r\n\r\n::placeholder {\r\n  font-style: italic;\r\n  color: #b6b6b6;\r\n}\r\n\r\n.to-do-list {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.to-do-list li {\r\n  padding: 20px 25px;\r\n  border-bottom: 1px solid #d3d3d3;\r\n  position: relative;\r\n}\r\n\r\n.to-do-list li button {\r\n  position: absolute;\r\n  right: 25px;\r\n  width: 25px;\r\n  height: 25px;\r\n  border: 0;\r\n  background: url('+b+") no-repeat;\r\n  background-size: contain;\r\n  cursor: pointer;\r\n}\r\n\r\n.to-do-list li button.delete-button {\r\n  background: url("+g+") no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.to-do-list li button:hover {\r\n  background: url("+f+") no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.to-do-list li button.delete-button:hover {\r\n  background: url("+E+") no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.clear-btn {\r\n  width: 100%;\r\n  background-color: #fafafa;\r\n  color: #b6b6b6;\r\n  font-size: larger;\r\n}\r\n\r\n.clear-btn:hover {\r\n  background-color: #eee;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,uBAAuB;EACvB,SAAS;EACT,cAAc;EACd,gBAAgB;EAChB,aAAa;AACf;;AAEA,UAAU;AACV;EACE,WAAW;AACb;;AAEA,UAAU;AACV;EACE,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA,WAAW;AACX;EACE,mBAAmB;EACnB,mBAAmB;AACrB;;AAEA;EACE,4BAA4B;EAC5B,kBAAkB;EAClB,cAAc;AAChB;;AAEA,oBAAoB;AACpB;EACE,mBAAmB;AACrB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,cAAc;EACd,uBAAuB;EACvB,6CAA6C;EAC7C,UAAU;AACZ;;AAEA;;EAEE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,iBAAiB;EACjB,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,gCAAgC;AAClC;;AAEA;;EAEE,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,cAAc;EACd,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;EACtB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,SAAS;EACT,qBAAqB;AACvB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;;EAEE,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,gCAAgC;EAChC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,WAAW;EACX,YAAY;EACZ,SAAS;EACT,6DAAsC;EACtC,wBAAwB;EACxB,eAAe;AACjB;;AAEA;EACE,6DAAwC;EACxC,wBAAwB;AAC1B;;AAEA;EACE,6DAA2C;EAC3C,wBAAwB;AAC1B;;AAEA;EACE,6DAA6C;EAC7C,wBAAwB;AAC1B;;AAEA;EACE,WAAW;EACX,yBAAyB;EACzB,cAAc;EACd,iBAAiB;AACnB;;AAEA;EACE,sBAAsB;AACxB",sourcesContent:['body {\r\n  background-color: #fafafa;\r\n  font-family: sans-serif;\r\n  margin: 0;\r\n  color: #6a6969;\r\n  font-weight: 500;\r\n  padding: 50px;\r\n}\r\n\r\n/* width */\r\n::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n::-webkit-scrollbar-thumb {\r\n  background: #b6b6b6;\r\n  border-radius: 10px;\r\n}\r\n\r\n:-ms-input-placeholder {\r\n  /* Internet Explorer 10-11 */\r\n  font-style: italic;\r\n  color: #b6b6b6;\r\n}\r\n\r\n/* Handle on hover */\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #6a6969;\r\n}\r\n\r\n.basic-font-weight {\r\n  font-weight: 500;\r\n}\r\n\r\nmain {\r\n  border-radius: 5px;\r\n  margin: 0 auto;\r\n  background-color: white;\r\n  box-shadow: 0 0 15px 0 rgb(154 161 171 / 50%);\r\n  width: 50%;\r\n}\r\n\r\nheader,\r\n.add-item-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.basic-button {\r\n  border: unset;\r\n  background: unset;\r\n  padding: unset;\r\n  cursor: pointer;\r\n}\r\n\r\n.basic-button:hover svg path {\r\n  fill: #6a6969 !important;\r\n}\r\n\r\n.basic-p {\r\n  padding: 20px 25px;\r\n}\r\n\r\n.m-0 {\r\n  margin: 0;\r\n}\r\n\r\n.basic-border {\r\n  border-bottom: 1px solid #d3d3d3;\r\n}\r\n\r\n.add-item-container input,\r\n.to-do-list li input[type="text"] {\r\n  border: unset;\r\n  font-size: larger;\r\n  font-style: italic;\r\n  color: #6a6969;\r\n  width: 75% !important;\r\n}\r\n\r\n.to-do-list li input {\r\n  margin: 0 10px 0 0;\r\n  vertical-align: middle;\r\n  width: 15px;\r\n  height: 15px;\r\n}\r\n\r\n.to-do-list li p {\r\n  margin: 0;\r\n  display: inline-block;\r\n}\r\n\r\n.to-do-list li input:checked + p {\r\n  text-decoration: line-through;\r\n}\r\n\r\n.add-item-container input:focus-visible,\r\n.to-do-list li input[type="text"]:focus-visible {\r\n  outline: unset;\r\n}\r\n\r\n::placeholder {\r\n  font-style: italic;\r\n  color: #b6b6b6;\r\n}\r\n\r\n.to-do-list {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.to-do-list li {\r\n  padding: 20px 25px;\r\n  border-bottom: 1px solid #d3d3d3;\r\n  position: relative;\r\n}\r\n\r\n.to-do-list li button {\r\n  position: absolute;\r\n  right: 25px;\r\n  width: 25px;\r\n  height: 25px;\r\n  border: 0;\r\n  background: url("./dot.svg") no-repeat;\r\n  background-size: contain;\r\n  cursor: pointer;\r\n}\r\n\r\n.to-do-list li button.delete-button {\r\n  background: url("./trash.svg") no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.to-do-list li button:hover {\r\n  background: url("./dark-dot.svg") no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.to-do-list li button.delete-button:hover {\r\n  background: url("./dark-trash.svg") no-repeat;\r\n  background-size: contain;\r\n}\r\n\r\n.clear-btn {\r\n  width: 100%;\r\n  background-color: #fafafa;\r\n  color: #b6b6b6;\r\n  font-size: larger;\r\n}\r\n\r\n.clear-btn:hover {\r\n  background-color: #eee;\r\n}\r\n'],sourceRoot:""}]);const h=p},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var t=n(r);return r[2]?"@media ".concat(r[2]," {").concat(t,"}"):t})).join("")},r.i=function(n,t,e){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(e)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var c=0;c<n.length;c++){var A=[].concat(n[c]);e&&o[A[0]]||(t&&(A[2]?A[2]="".concat(t," and ").concat(A[2]):A[2]=t),r.push(A))}},r}},15:n=>{function r(n,r){(null==r||r>n.length)&&(r=n.length);for(var t=0,e=new Array(r);t<r;t++)e[t]=n[t];return e}n.exports=function(n){var t,e,o=(e=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,r){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var e,o,i=[],a=!0,c=!1;try{for(t=t.call(n);!(a=(e=t.next()).done)&&(i.push(e.value),!r||i.length!==r);a=!0);}catch(n){c=!0,o=n}finally{try{a||null==t.return||t.return()}finally{if(c)throw o}}return i}}(t,e)||function(n,t){if(n){if("string"==typeof n)return r(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);return"Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e?Array.from(n):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?r(n,t):void 0}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if(!a)return i;if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),s="/*# ".concat(A," */"),l=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(l).concat([s]).join("\n")}return[i].join("\n")}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},379:n=>{var r=[];function t(n){for(var t=-1,e=0;e<r.length;e++)if(r[e].identifier===n){t=e;break}return t}function e(n,e){for(var i={},a=[],c=0;c<n.length;c++){var A=n[c],s=e.base?A[0]+e.base:A[0],l=i[s]||0,d="".concat(s," ").concat(l);i[s]=l+1;var u=t(d),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==u?(r[u].references++,r[u].updater(p)):r.push({identifier:d,updater:o(p,e),references:1}),a.push(d)}return a}function o(n,r){var t=r.domAPI(r);return t.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap)return;t.update(n=r)}else t.remove()}}n.exports=function(n,o){var i=e(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);r[c].references--}for(var A=e(n,o),s=0;s<i.length;s++){var l=t(i[s]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}i=A}}},569:n=>{var r={};n.exports=function(n,t){var e=function(n){if(void 0===r[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}r[n]=t}return r[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r),r}},565:(n,r,t)=>{n.exports=function(n){var r=t.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(t){!function(n,r,t){var e=t.css,o=t.media,i=t.sourceMap;o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(e,n)}(r,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},693:(n,r,t)=>{n.exports=t.p+"b608153f8e332726f2f4.svg"},467:(n,r,t)=>{n.exports=t.p+"a10c7d7b1bd33f8cb0e8.svg"},83:(n,r,t)=>{n.exports=t.p+"b5e72fba9edb41d462c4.svg"},186:(n,r,t)=>{n.exports=t.p+"7bf0d5f971842e0e1899.svg"}},r={};function t(e){var o=r[e];if(void 0!==o)return o.exports;var i=r[e]={id:e,exports:{}};return n[e](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return t.d(r,{a:r}),r},t.d=(n,r)=>{for(var e in r)t.o(r,e)&&!t.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:r[e]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var r=t.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var e=r.getElementsByTagName("script");e.length&&(n=e[e.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,(()=>{var n=t(379),r=t.n(n),e=t(795),o=t.n(e),i=t(569),a=t.n(i),c=t(565),A=t.n(c),s=t(216),l=t.n(s),d=t(589),u=t.n(d),p=t(426),b={};b.styleTagTransform=u(),b.setAttributes=A(),b.insert=a().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=l(),r()(p.Z,b),p.Z&&p.Z.locals&&p.Z.locals;class g{constructor(n,r,t){this.description=n,this.completed=r,this.index=t}}class f{static setTask(n){const r=f.getToDoList(),t=f.getIndex();n.index=t,r.push(n),localStorage.setItem("to_do_list",JSON.stringify(r))}static getToDoList(){let n;return n=localStorage.getItem("to_do_list")?JSON.parse(localStorage.getItem("to_do_list")):[],n}static updateToDoList(n){localStorage.setItem("index",JSON.stringify(n.length-1)),n.map(((n,r)=>{n.index=r})),localStorage.setItem("to_do_list",JSON.stringify(n))}static getIndex(){let n;return localStorage.getItem("index")?(n=JSON.parse(localStorage.getItem("index"))+1,localStorage.setItem("index",JSON.stringify(n))):(n=0,localStorage.setItem("index",JSON.stringify(n))),n}static resetToDoList(){localStorage.clear()}}let E=f.getToDoList();const h=document.getElementById("to-do-list");function m(n){n.sort(((n,r)=>n.index>r.index?1:-1)),h.innerHTML="",n.map((n=>{const r=document.createElement("li"),t=document.createElement("p"),e=document.createTextNode(n.description);t.appendChild(e);const o=document.createElement("input");o.setAttribute("type","checkbox"),n.completed?o.checked=!0:o.checked=!1,o.addEventListener("change",(n=>{let r;r=!!n.target.checked;const t=Array.prototype.indexOf.call(h.childNodes,n.target.offsetParent),e=f.getToDoList(),o=function(n,r){return n.completed=!!r,n}(e[t],r);e.splice(t,1,o),f.updateToDoList(e)}));const i=document.createElement("button");i.addEventListener("click",(n=>{const r=Array.prototype.indexOf.call(h.childNodes,n.target.offsetParent),t=f.getToDoList()[r];!function(n,r,t){n.removeChild(n.lastElementChild),n.removeChild(n.lastElementChild);const e=document.createElement("input");e.setAttribute("type","text"),e.value=t.description,e.addEventListener("change",(n=>{const r=Array.prototype.indexOf.call(h.childNodes,n.target.offsetParent),t=f.getToDoList(),e=function(n,r){return n.description=r,n}(t[r],n.target.value);t.splice(r,1,e),f.updateToDoList(t),m(t)})),n.appendChild(e);const o=document.createElement("button");o.setAttribute("class","delete-button"),o.addEventListener("click",(n=>{const r=Array.prototype.indexOf.call(h.childNodes,n.target.offsetParent),t=f.getToDoList();t.splice(r,1),f.updateToDoList(t),m(t)})),n.appendChild(o)}(n.target.offsetParent,0,t)})),r.appendChild(o),r.appendChild(t),r.appendChild(i),h.appendChild(r)}))}window.addEventListener("load",m(E)),document.getElementById("reset-button").addEventListener("click",(()=>{f.resetToDoList(),E=f.getToDoList(),m(E)}));const C=document.getElementById("new-task");function B(){if(C.value){const n=C.value,r=new g(n,!1,0);f.setTask(r),E=f.getToDoList(),C.value="",m(E)}}document.getElementById("add-to-your-list").addEventListener("click",B),C.addEventListener("keydown",(n=>{"Enter"===n.key&&B()})),document.getElementById("clear-completed-tasks").addEventListener("click",(()=>{E=f.getToDoList();const n=E.filter((n=>!1===n.completed));f.updateToDoList(n),m(n)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,